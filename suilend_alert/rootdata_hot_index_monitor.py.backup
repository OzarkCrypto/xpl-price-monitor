#!/usr/bin/env python3
"""
Rootdata Hot Index 모니터링 봇
6시간마다 hot index TOP 10을 텔레그램으로 전송
"""

import os
import sys
import time
import schedule
import requests
from datetime import datetime, timedelta
from bs4 import BeautifulSoup
from dotenv import load_dotenv
import logging
import pickle
import json
import re

# 로깅 설정
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('rootdata_hot_index.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

class RootdataHotIndexMonitor:
    def __init__(self):
        """Rootdata Hot Index 모니터 초기화"""
        load_dotenv()
        
        # 텔레그램 설정 (Rootdata 전용)
        self.telegram_bot_token = os.getenv('ROOTDATA_BOT_TOKEN') or os.getenv('TELEGRAM_BOT_TOKEN')
        
        # 메인 채널 ID
        self.telegram_chat_id = os.getenv('ROOTDATA_CHAT_ID') or os.getenv('TELEGRAM_CHAT_ID')
        
        # 추가 채널 ID (선택사항)
        self.extra_chat_id = os.getenv('ROOTDATA_EXTRA_CHAT_ID')
        
        if not self.telegram_bot_token or not self.telegram_chat_id:
            raise ValueError("ROOTDATA_BOT_TOKEN/ROOTDATA_CHAT_ID 또는 TELEGRAM_BOT_TOKEN/TELEGRAM_CHAT_ID 환경 변수가 필요합니다.")
        
        # 전송할 채널 목록 생성
        self.chat_ids = [self.telegram_chat_id]
        if self.extra_chat_id:
            self.chat_ids.append(self.extra_chat_id)

        # 이전 데이터 로드
        self.previous_data = self.load_previous_data()
        
        # 프로젝트 이름 매핑 (긴 이름을 짧고 명확하게)
        self.project_name_mapping = {
            'Game developer platformOVERTAKE': 'OVERTAKE',
            'A Web3 Privacy Acceleration so...': 'Multiple Network',
            'Fantasy sports platformFootball.Fun': 'Football.Fun',
            'Crypto Lending PlatformWorld Liberty Financial': 'World Liberty Financial',
            'Meme CoinYZY MoneyYZY': 'YZY Money',
            'Connecting Bitcoin to DeFi with LBTCLombard': 'Lombard',
            'Layer 1 blockchainSuiSUI': 'SUI',
            'Intention-driven modular blockchainWarden Protocol': 'Warden Protocol',
            'Token launchpadheavenLIGHT': 'heaven',
            'Cross-platform play-and-earn d...': 'Xterio',
            'Decentralized identity platform': 'Identity Platform',
            'DeFi lending protocol': 'Lending Protocol',
            'NFT marketplace': 'NFT Market',
            'GameFi platform': 'GameFi',
            'DEX aggregator': 'DEX Aggregator',
            'Cross-chain bridge': 'Bridge',
            'Oracle network': 'Oracle',
            'Staking platform': 'Staking',
            'Yield farming': 'Yield Farm',
            'Governance token': 'Governance'
        }

    def clean_project_name(self, project_name):
        """
        프로젝트 이름을 읽기 쉽게 정리합니다.
        """
        if not project_name:
            return "Unknown Project"
        
        # 1. 매핑된 이름이 있으면 사용
        if project_name in self.project_name_mapping:
            return self.project_name_mapping[project_name]
        
        # 2. 일반적인 패턴 정리
        # "PlatformName" 형태를 "Name"으로 변환
        if re.search(r'platform[A-Z]', project_name):
            clean_name = re.sub(r'platform([A-Z][a-zA-Z]+)', r'\1', project_name)
        # "TypeName" 형태를 "Name"으로 변환  
        elif re.search(r'[A-Z][a-z]+[A-Z][a-zA-Z]+', project_name):
            # 첫 번째 대문자+소문자 조합을 제거
            clean_name = re.sub(r'^[A-Z][a-z]+', '', project_name)
            if clean_name:
                project_name = clean_name
        
        # 3. 특수 구분자로 분리
        separators = ['.', ' is ', ' is a ', ' - ', ' | ', ' / ']
        for sep in separators:
            if sep in project_name:
                parts = project_name.split(sep)
                if parts[0].strip():
                    project_name = parts[0].strip()
                    break
        
        # 4. 길이 제한 및 정리
        if len(project_name) > 40:
            # 마지막 단어가 완전하지 않으면 제거
            words = project_name.split()
            if len(words) > 1:
                # 마지막 단어가 너무 짧으면 제거
                if len(words[-1]) < 3:
                    words = words[:-1]
                project_name = ' '.join(words)
            
            # 여전히 길면 자르기
            if len(project_name) > 40:
                project_name = project_name[:37] + "..."
        
        # 5. 불필요한 공백 제거
        project_name = re.sub(r'\s+', ' ', project_name).strip()
        
        return project_name if project_name else "Unknown Project" 